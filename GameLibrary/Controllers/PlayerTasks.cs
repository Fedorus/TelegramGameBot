using System;
using System.Threading.Tasks;
using Telegram.Bot.Types;
using Telegram.Bot.Types.ReplyMarkups;

namespace GameLibrary.Controllers
{
    public class PlayerTasks : Controller
    {
        public override bool CheckMessage(Message eMessage, Player player)
        {
            return eMessage.Text == "üìÉ–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è";
        }

        public override async Task<CommandResult> ProceedMessageAsync(Message eMessage, Player player, CommandResult commandResult)
        {
            commandResult.Text.AppendLine("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è:");
            if (player.Lvl < 5) // –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –ø–æ–ª—è–Ω–µ
            {
                commandResult.Text.AppendLine(
                    "–ë–ª–∏–Ω, —Å—Ç—Ä—ë–º–Ω–æ —á—ë—Ç, –ø–æ–≥—É–ª—è—é –ø–æ–∫–∞ –ø–æ –ø–æ–ª—è–Ω–∫–µ, –º–æ–∂–µ—Ç –Ω–∞–π–¥—É —á—Ç–æ...");
                commandResult.Buttons.Add(new InlineKeyboardButton("–û–±—ã—Å–∫–∞—Ç—å –ø–æ–ª—è–Ω—É")
                    {CallbackData = "/meadow_search"});
            }
            if (player.Lvl > 2 && player.Lvl < 8) // –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ –ª–µ—Å—É
            {
                commandResult.Text.AppendLine(
                    "–ú–æ–∂–µ—Ç –ø–æ –∫—Ä–∞—é –ª–µ—Å–∞ –ø—Ä–æ–π—Ç–∏? –ù—É, —è –∂–µ —Ö—Ä–∞–±–Ω—ã–π... –Ω–∞–≤–µ—Ä–Ω–æ...");
                commandResult.Buttons.Add(
                    new InlineKeyboardButton("–ü–æ—Ö–æ–¥–∏—Ç—å –ø–æ –ª–µ—Å—É") {CallbackData = "/forest_search"});
            }

            if (player.Lvl >= 5)
            {
                commandResult.Text.AppendLine("–ö–∞–∂–µ—Ç—Å—è —è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ–∫–∞—á–∞–ª—Å—è —á—Ç–æ –±—ã –∑–∞–π—Ç–∏ –≤ –ª–µ—Å –ø–æ–¥–∞–ª—å—à–µ.");
                commandResult.Buttons.Add(new InlineKeyboardButton("–£–≥–ª—É–±–∏—Ç—å—Å—è –≤ –ª–µ—Å")
                    {CallbackData = "/forest_deep_search"});
            }
            return commandResult;
        }

        public override bool CheckCallback(CallbackQuery eCallbackQuery, Player player)
        {
            return (eCallbackQuery.Data == "/meadow_search" || eCallbackQuery.Data == "/forest_search" ||
                    eCallbackQuery.Data == "/forest_deep_search");
        }

        public override async Task<CommandResult> ProceedCallbackAsync(CallbackQuery eCallbackQuery, Player player, CommandResult commandResult)
        {
            switch (eCallbackQuery.Data)
            {
                case "/meadow_search":
                    player.Money += 30;
                    player.Exp += 10;
                    commandResult.Text.AppendLine("–î–µ–Ω—å–≥–∏ +30, –æ–ø—ã—Ç+10");
                    commandResult.Text.AppendLine("–î–∞-–¥–∞, —Ö–æ–¥–∏–ª –ø–æ –ø–æ–ª—è–Ω–µ –∏ –Ω–∞—à–µ–ª –¥–µ–Ω—å–≥–∏...");
                    commandResult.Text.AppendLine("–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Ç—É—Ç –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã");
                    break;
                case "/forest_search":
                    player.Money += 30;
                    player.Exp += 10;
                    commandResult.Text.AppendLine("–î–µ–Ω—å–≥–∏ +30, –æ–ø—ã—Ç+10");
                    commandResult.Text.AppendLine("–î–∞-–¥–∞, —Ö–æ–¥–∏–ª –ø–æ –∫—Ä–∞—é –ª–µ—Å–∞ –∏ –Ω–∞—à–µ–ª –¥–µ–Ω—å–≥–∏...");
                    commandResult.Text.AppendLine("–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Ç—É—Ç –±—É–¥—É—Ç –±–æ–ª–µ–µ –∫—Ä—É—Ç—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã");
                    break;
                case "/forest_deep_search":
                    player.Money += 30;
                    player.Exp += 10;
                    commandResult.Text.AppendLine("–î–µ–Ω—å–≥–∏ +30, –æ–ø—ã—Ç+10");
                    commandResult.Text.AppendLine("–î–∞-–¥–∞, —Ö–æ–¥–∏–ª –≤ –ª–µ—Å –∏ –Ω–∞—à–µ–ª –¥–µ–Ω—å–≥–∏...");
                    commandResult.Text.AppendLine("–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Ç—É—Ç –±—É–¥—É—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∞ –∏ —Ä–∞–∑–Ω—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è + –ø—Ä–µ–¥–º–µ—Ç—ã");
                    break;
            }

            return commandResult;
        }
    }
}